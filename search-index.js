var searchIndex = JSON.parse('{\
"jb":{"doc":"<code>JetBrains</code> CLI","t":"CCCAOOOOOAAOOOAOOOAAOAADDLLLLMMLLLLLLLMLLLLLLMMMLLLLLLLLMDLLLLMLLLFLMLLLNNNNENLLLLLLLLLLLLLLLLLLLDNNGLLLLLLLLLLLLLLLLLLNNNEDNLLLLLLLLLLLLLLLLLLMMLLLLLLLCCDCCALLLLAMLLLLLLLLLLLLLLLLLAMLLLLLLLAMLLLLLLLLAMIIIKKKKKKKKDLLLLLLLLLLLLLLLLLMLMLLMLLLLLNNNNNNNNNNNNENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLNNNELLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLMAFCFFF","n":["Batch","Result","Tool","api","bail","bail_with","batch","batch_with","debug","env","error","error","info","info_elapsed","log","log","log_elapsed","make","tool","util","warn","deserial","fetch","Download","Release","borrow","borrow","borrow_mut","borrow_mut","build","checksum_link","clone","clone","clone_into","clone_into","deserialize","deserialize","download","downloads","fmt","fmt","from","from","into","into","link","release","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","Fetch","borrow","borrow_mut","clone","clone_into","download","fmt","from","into","release","to_owned","tool","try_from","try_into","type_id","BinariesDirectory","IconsDirectory","Notify","ToolsDirectory","Variable","Verbose","borrow","borrow_mut","clone","clone_into","default","env","fmt","from","get","get_bool","get_one","get_or","into","set","set_one","to_owned","try_from","try_into","type_id","Batch","Err","Ok","Result","add","borrow","borrow_mut","default","errors","extend","first","fmt","from","from","into","is_empty","len","new","to_string","try_from","try_into","type_id","Debug","Error","Info","Level","Logger","Warning","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","instance","into","into","log","name","started","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Build","Kind","Tool","Type","Version","action","as_path","as_str","borrow","borrow_mut","build","build","clone","clone_into","cmp","compare","eq","equivalent","equivalent","equivalent","fill","fmt","fmt","from","from_str","hash","into","is_installed","is_linked","kind","kind","link","list","list_kind","list_matching","matched","new","partial_cmp","release","release","sync","to_owned","to_string","try_from","try_into","type_id","unlink","unlink_with_alternative","version","version","Link","List","Probe","is_linked","link","list","list_kind","list_matching","sync","unlink","unlink_with_alternative","Build","borrow","borrow_mut","clone","clone_into","cmp","compare","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_str","hash","into","major","matched","minor","new","partial_cmp","patch","to_owned","to_string","try_from","try_into","type_id","Aqua","CLion","CLionNova","DataGrip","DataSpell","DotMemory","DotTrace","Fleet","Gateway","GoLand","IntelliJIdeaCommunity","IntelliJIdeaUltimate","Kind","MPS","PhpStorm","PyCharmCommunity","PyCharmProfessional","Rider","RubyMine","RustRover","Space","WebStorm","Writerside","as_str","binary","borrow","borrow_mut","clone","clone_into","cmp","code","compare","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_str","hash","into","list","partial_cmp","to_owned","to_string","try_from","try_into","type_id","EAP","Preview","Release","Type","as_str","borrow","borrow_mut","clone","clone_into","cmp","compare","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_str","hash","into","kind_default","partial_cmp","to_owned","to_string","try_from","try_into","type_id","Major","Version","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from_str","from_str","hash","hash","into","into","major","matched","minor","month","new","new","partial_cmp","partial_cmp","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","year","down","download","download_extract","extract_archive","download_extract","strip_content"],"q":[[0,"jb"],[21,"jb::api"],[23,"jb::api::deserial"],[57,"jb::api::fetch"],[72,"jb::env"],[97,"jb::error"],[119,"jb::log"],[152,"jb::tool"],[202,"jb::tool::action"],[213,"jb::tool::build"],[242,"jb::tool::kind"],[291,"jb::tool::release"],[320,"jb::tool::version"],[374,"jb::util"],[378,"jb::util::down"],[380,"core::result"],[381,"serde::de"],[382,"anyhow"],[383,"core::fmt"],[384,"core::fmt"],[385,"alloc::string"],[386,"core::convert"],[387,"core::marker"],[388,"core::marker"],[389,"core::option"],[390,"std::thread"],[391,"dashmap::mapref::one"],[392,"core::fmt"],[393,"core::cmp"],[394,"core::hash"],[395,"core::marker"]],"d":["","","","Module for handling the API requests and responses.","Return a batch of errors directly from a format string","Return a batch of errors directly from an error with a …","Create a new batch of errors from a single error","Add an error to the given batch","","Module for handling defaults and environment variables.","Module for handling errors in a batch","","","","","","","","Module for tools and tool actions.","Module for utilities.","","Module for deserializing responses from <code>JetBrains</code>’ API.","Module for fetching releases from <code>JetBrains</code>’ API.","The deserialized download data from <code>JetBrains</code>’ API. …","The deserialized release data from <code>JetBrains</code>’ API.","","","","","","","","","","","","","Returns the download for the current platform and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The fetched data for a tool.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Fetches the latest release of a tool from <code>JetBrains</code>’ API.","","","","","","The directory where tool binaries are installed. (e.g. …","The directory where tool icons are installed. (e.g. …","Whether to enable notifications for long-running tasks.","The directory where tools are installed. (e.g. …","","Whether to enable verbose logging.","","","","","Get the default value for a variable.","Get the name of the environment variable.","","Returns the argument unchanged.","Get the value of the variable.","Get the value of the variable as a bool.","Get the value of a variable.","Get the value of a variable, or a default value if it is …","Calls <code>U::from(self)</code>.","Set the value of the variable.","Set the value of a variable.","","","","","A batch of errors that occurred while executing a command","Contains the error value","Contains the success value","A type alias for a result that can return a batch of errors","Add an error to the batch","","","","Get the errors in the batch","Extend the batch with another batch","Get the first error in the batch","","Create a new batch of errors from a single error","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Check if the batch is empty","Get the number of errors in the batch","Create a new batch of errors","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the logger for the current thread or create a new one …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Log a message.","","","","","","","","","","","","A tool.","","","Action module for tool.","Returns the path to the tool.","Returns the tool as a string.","","","Build version types and parsing","","","","","","","","","","Fills the tool with the latest version, build, and release.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Returns whether the tool is installed.","","<code>JetBrains</code> tool kinds and parsing","","","","","","Returns whether the tool matches another tool.","","","","","","","","","","","","","Version types and parsing","","","","","Returns whether the tool is linked.","Links the tool.","Lists all tools.","Lists tools of a specific kind.","Lists tools that match the current tool.","Finds a compatible release for the tool.","Unlinks the tool.","Unlinks the tool and links an alternative version.","A build version number","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Returns whether the build version matches another build …","","","","","","","","","","","","","","","","","","","","","","The tool kind.","","","","","","","","","","","Get the tool kind as a string (e.g. “…","Get the binary name for this tool kind.","","","","","","Get the tool kind as a code (e.g. “IIU”, “IIC”).","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Returns a list of all tool kinds.","","","","","","","","","","","Returns the release type as a string.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Returns the default release type for the given kind.","","","","","","","A major version number (e.g. 2021.1)","A version number","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The major version (e.g. 2021.1)","Returns whether the version matches another version.","The minor version (if any)","","","","","","","","","","","","","","","","","","Download a file from a URL to a path.","","Extract an archive to a destination.","Download and extract a tarball from a URL.","Strip the content of a folder, moving all files and …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,0,10,10,10,10,10,10,10,10,0,10,10,10,10,10,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,44,44,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,25,25,25,0,0,25,25,26,25,26,25,25,25,25,25,25,25,26,25,26,26,25,26,26,26,26,25,25,26,25,26,25,26,0,0,0,0,0,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,0,0,0,45,45,46,46,46,47,45,45,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,33,33,33,33,33,33,33,33,33,33,33,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,34,40,34,40,34,40,34,40,34,40,34,40,34,34,40,34,34,34,40,40,40,34,34,40,40,34,40,34,40,34,40,34,40,34,34,34,40,34,40,34,40,34,40,34,40,34,40,34,40,34,40,40,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[-1,[[4,[1]]],5],[-1,[[4,[2]]],5],[1,[[6,[2]]]],0,[[1,7],8],[[2,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[[-1,-2],3,[],[]],0,[[10,7],8],[-1,-1,[]],[-1,-2,[],[]],[11,[[6,[10]]]],[-1,-2,[],[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[12,12],[[-1,-2],3,[],[]],[12,-1,[[14,[13]],15,16]],[12,17],[[12,7],8],[-1,-1,[]],[12,-1,[[14,[13]],15,16]],[12,18],[12,-1,[[14,[13]],15,16]],[[12,-1],-1,[[14,[13]],15,16]],[-1,-2,[],[]],[[12,-1],3,[[19,[13]]]],[[12,-1],3,[[19,[13]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],0,0,0,0,[[20,21],3],[-1,-2,[],[]],[-1,-2,[],[]],[[],20],[20,[[22,[21]]]],[[20,20],3],[20,[[23,[21]]]],[[20,7],8],[21,20],[-1,-1,[]],[-1,-2,[],[]],[20,18],[20,24],[[],20],[-1,13,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[[-1,-2],3,[],[]],[[25,25],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[25,7],8],[[26,7],8],[-1,-1,[]],[-1,-1,[]],[[],[[28,[27,26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,25,-1,18],3,29],0,0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,[11,30],[11,13],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[11,11],[[-1,-2],3,[],[]],[[11,11],31],[[-1,-2],31,[],[]],[[11,11],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[11,[[6,[11]]]],[[11,7],8],[[11,7],8],[-1,-1,[]],[17,[[4,[11]]]],[[11,-1],3,32],[-1,-2,[],[]],[11,18],[11,18],0,0,[11,[[6,[3]]]],[[],[[6,[[22,[11]]]]]],[33,[[6,[[22,[11]]]]]],[11,[[6,[[22,[11]]]]]],[[11,11],18],[[33,[23,[34]],[23,[35]],[23,[36]]],11],[[11,11],[[23,[31]]]],0,0,[11,[[6,[2]]]],[-1,-2,[],[]],[-1,13,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],[11,[[6,[3]]]],[11,[[6,[3]]]],0,0,0,0,0,[-1,18,37],[-1,[[6,[3]]],37],[[],[[6,[[22,[11]]]]]],[33,[[6,[[22,[11]]]]]],[-1,[[6,[[22,[11]]]]],37],[-1,[[6,[2]]],[]],[-1,[[6,[3]]],37],[-1,[[6,[3]]],37],0,[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[[-1,-2],3,[],[]],[[35,35],31],[[-1,-2],31,[],[]],[-1,[[4,[35]]],5],[[35,35],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[35,7],8],[[35,7],8],[-1,-1,[]],[17,[[4,[35]]]],[[35,-1],3,32],[-1,-2,[],[]],0,[[35,35],18],0,[[38,38,[23,[38]]],35],[[35,35],[[23,[31]]]],0,[-1,-2,[],[]],[-1,13,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[33,17],[33,17],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[[-1,-2],3,[],[]],[[33,33],31],[33,17],[[-1,-2],31,[],[]],[[33,33],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[33,7],8],[[33,7],8],[-1,-1,[]],[17,[[4,[33]]]],[[33,-1],3,32],[-1,-2,[],[]],[[],[[39,[33]]]],[[33,33],[[23,[31]]]],[-1,-2,[],[]],[-1,13,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],0,0,0,0,[36,17],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[[-1,-2],3,[],[]],[[36,36],31],[[-1,-2],31,[],[]],[-1,[[4,[36]]],5],[[36,36],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[36,7],8],[[36,7],8],[-1,-1,[]],[17,[[4,[36]]]],[[36,-1],3,32],[-1,-2,[],[]],[33,36],[[36,36],[[23,[31]]]],[-1,-2,[],[]],[-1,13,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[40,40],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[34,34],31],[[40,40],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[-1,[[4,[34]]],5],[[34,34],18],[[40,40],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[34,7],8],[[34,7],8],[[40,7],8],[[40,7],8],[-1,-1,[]],[-1,-1,[]],[17,[[4,[34]]]],[17,[[4,[40]]]],[[34,-1],3,32],[[40,-1],3,32],[-1,-2,[],[]],[-1,-2,[],[]],0,[[34,34],18],0,0,[[40,[23,[41]]],34],[[38,41],40],[[34,34],[[23,[31]]]],[[40,40],[[23,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,[[17,30,[23,[42]]],[[6,[3]]]],0,[[30,30,41],[[6,[3]]]],[[17,30,[23,[43]]],[[6,[3]]]],[30,[[6,[3]]]]],"c":[],"p":[[3,"Release",23],[3,"Download",23],[15,"tuple"],[4,"Result",380],[8,"Deserializer",381],[6,"Result",382],[3,"Formatter",383],[6,"Result",383],[3,"TypeId",384],[3,"Fetch",57],[3,"Tool",152],[4,"Variable",72],[3,"String",385],[8,"From",386],[8,"Send",387],[8,"Sync",387],[15,"str"],[15,"bool"],[8,"Into",386],[3,"Batch",97],[3,"Error",382],[3,"Vec",388],[4,"Option",389],[15,"usize"],[4,"Level",119],[3,"Logger",119],[3,"ThreadId",390],[3,"RefMut",391],[8,"Display",383],[3,"PathBuf",392],[4,"Ordering",393],[8,"Hasher",394],[4,"Kind",242],[3,"Version",320],[3,"Build",213],[4,"Type",291],[8,"Sized",387],[15,"u16"],[15,"slice"],[3,"Major",320],[15,"u8"],[15,"u64"],[3,"ProgressBar",395],[6,"Result",97],[8,"Link",202],[8,"List",202],[8,"Probe",202]],"b":[[173,"impl-Display-for-Tool"],[174,"impl-Debug-for-Tool"],[225,"impl-Display-for-Build"],[226,"impl-Debug-for-Build"],[278,"impl-Debug-for-Kind"],[279,"impl-Display-for-Kind"],[307,"impl-Debug-for-Type"],[308,"impl-Display-for-Type"],[343,"impl-Debug-for-Version"],[344,"impl-Display-for-Version"],[345,"impl-Debug-for-Major"],[346,"impl-Display-for-Major"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
