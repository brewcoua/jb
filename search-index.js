var searchIndex = new Map(JSON.parse('[\
["jb",{"doc":"<code>JetBrains</code> CLI","t":"EEECQQQQQQQCCQQQCQQQECCQCCFFNNNNOONNNNNNNONNNNNNOOONNNNNNNNONNFNNNNONNNHNONNNNPPPPPPGPNNNNNNNNNNNNNNNNNNNNFPPINNNNNNNNNNNNNNNNNNNNPPPGFPNNNNNNNNNNNNNNNNNNOONNNNNNNNNEEFEECNNNNNNNCONNNNNNNNNNNNNNNNNNCONNNNNNNCONNNNNNNNNCONKKKMMMMMMMMFNNNNNNNNNNNNNNNNNONONNONNNNNNNPPPPPPPPPPPGPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNOHHH","n":["Batch","Result","Tool","api","bail","bail_with","batch","batch_with","catch","catch_with","debug","env","error","error","info","info_elapsed","log","log","log_elapsed","make","notify","tool","util","warn","deserial","fetch","Download","Release","borrow","borrow","borrow_mut","borrow_mut","build","checksum_link","clone","clone","clone_into","clone_into","deserialize","deserialize","download","downloads","fmt","fmt","from","from","into","into","link","release","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","Fetch","borrow","borrow_mut","clone","clone_into","download","fmt","from","into","release","to_owned","tool","try_from","try_into","type_id","vzip","BinariesDirectory","DesktopDirectory","IconsDirectory","Notify","SystemdDirectory","ToolsDirectory","Variable","Verbose","borrow","borrow_mut","clone","clone_into","default","env","fmt","from","get","get_bool","get_one","get_or","into","set","set_one","to_owned","try_from","try_into","type_id","vzip","Batch","Err","Ok","Result","add","borrow","borrow_mut","default","errors","extend","first","fmt","from","from","into","is_empty","len","new","null_value","to_string","try_from","try_into","type_id","vzip","Debug","Error","Info","Level","Logger","Warning","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","instance","into","into","log","name","started","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Build","Kind","Tool","Type","Version","action","as_desktop","as_executable","as_icon","as_path","as_str","borrow","borrow_mut","build","build","clone","clone_into","cmp","compare","eq","equivalent","equivalent","equivalent","fill","fmt","fmt","from","from_kind","from_str","hash","into","is_installed","is_linked","kind","kind","link","list","list_kind","list_matching","matched","new","partial_cmp","release","release","serialize","sync","to_owned","to_string","try_from","try_into","type_id","unlink","unlink_with_alternative","version","version","vzip","Link","List","Probe","is_linked","link","list","list_kind","list_matching","sync","unlink","unlink_with_alternative","Build","borrow","borrow_mut","clone","clone_into","cmp","compare","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_str","hash","into","major","matched","minor","new","partial_cmp","patch","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Aqua","CLion","DataGrip","DataSpell","DotMemory","DotTrace","Fleet","Gateway","GoLand","IntelliJIdeaCommunity","IntelliJIdeaUltimate","Kind","MPS","PhpStorm","PyCharmCommunity","PyCharmProfessional","Rider","RubyMine","RustRover","Space","WebStorm","Writerside","as_executable","as_icon","as_str","binary","borrow","borrow_mut","clone","clone_into","cmp","code","compare","description","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_str","hash","into","latest","linked","list","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","EAP","Preview","Release","Type","as_str","borrow","borrow_mut","clone","clone_into","cmp","compare","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_str","hash","into","kind_default","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Major","Version","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from_str","from_str","hash","hash","into","into","major","matched","minor","month","new","new","partial_cmp","partial_cmp","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","year","download_extract","notify","strip_content"],"q":[[0,"jb"],[24,"jb::api"],[26,"jb::api::deserial"],[62,"jb::api::fetch"],[78,"jb::env"],[106,"jb::error"],[130,"jb::log"],[165,"jb::tool"],[221,"jb::tool::action"],[232,"jb::tool::build"],[263,"jb::tool::kind"],[318,"jb::tool::release"],[349,"jb::tool::version"],[407,"jb::util"],[410,"core::result"],[411,"serde::de"],[412,"anyhow"],[413,"core::fmt"],[414,"core::fmt"],[415,"alloc::string"],[416,"core::convert"],[417,"core::marker"],[418,"core::marker"],[419,"core::option"],[420,"std::thread"],[421,"dashmap::mapref::one"],[422,"core::fmt"],[423,"core::cmp"],[424,"core::hash"],[425,"serde::ser"],[426,"indicatif::progress_bar"]],"d":["","","","Module for handling the API requests and responses.","Return a batch of errors directly from a format string","Return a batch of errors directly from an error with a …","Create a new batch of errors from a single error","Add an error to the given batch","Return a batch of errors directly from a result","Return a batch of errors directly from a result, adding …","","Module for handling defaults and environment variables.","Module for handling errors in a batch","","","","","","","","","Module for tools and tool actions.","Module for utilities.","","Module for deserializing responses from <code>JetBrains</code>’ API.","Module for fetching releases from <code>JetBrains</code>’ API.","The deserialized download data from <code>JetBrains</code>’ API. …","The deserialized release data from <code>JetBrains</code>’ API.","","","","","","","","","","","","","Returns the download for the current platform and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The fetched data for a tool.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Fetches the latest release of a tool from <code>JetBrains</code>’ API.","","","","","","","The directory where tool binaries are installed. (e.g. …","The directory where desktop files are installed. (e.g. …","The directory where tool icons are installed. (e.g. …","Whether to enable notifications for long-running tasks.","The directory where systemd service files are installed. …","The directory where tools are installed. (e.g. …","","Whether to enable verbose logging.","","","","","Get the default value for a variable.","Get the name of the environment variable.","","Returns the argument unchanged.","Get the value of the variable.","Get the value of the variable as a bool.","Get the value of a variable.","Get the value of a variable, or a default value if it is …","Calls <code>U::from(self)</code>.","Set the value of the variable.","Set the value of a variable.","","","","","","A batch of errors that occurred while executing a command","Contains the error value","Contains the success value","A type alias for a result that can return a batch of errors","Add an error to the batch","","","","Get the errors in the batch","Extend the batch with another batch","Get the first error in the batch","","Create a new batch of errors from a single error","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Check if the batch is empty","Get the number of errors in the batch","Create a new batch of errors","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the logger for the current thread or create a new one …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Log a message.","","","","","","","","","","","","","","A tool.","","","Action module for tool.","Returns a formatted string for the tool’s desktop entry.","Returns the path to the tool’s executable.","Returns the path to the tool’s icon.","Returns the path to the tool.","Returns the tool as a string.","","","Build version types and parsing","","","","","","","","","","Fills the tool with the latest version, build, and release.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Returns whether the tool is installed.","","<code>JetBrains</code> tool kinds and parsing","","","","","","Returns whether the tool matches another tool.","","","","","","","","","","","","","","Version types and parsing","","","","","","Returns whether the tool is linked.","Links the tool.","Lists all tools.","Lists tools of a specific kind.","Lists tools that match the current tool.","Finds a compatible release for the tool.","Unlinks the tool.","Unlinks the tool and links an alternative version.","A build version number","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Returns whether the build version matches another build …","","","","","","","","","","","","","","","","","","","","","","","The tool kind.","","","","","","","","","","","Get the relative path to the executable for this tool kind.","Get the relative path to the icon for this tool kind.","Get the tool kind as a string (e.g. “…","Get the binary name for this tool kind.","","","","","","Get the tool kind as a code (e.g. “IIU”, “IIC”).","","Get the tool kind as a human-readable description.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Get the latest tool of this kind.","Get the linked tool of this kind.","Returns a list of all tool kinds.","","","","","","","","","","","","","Returns the release type as a string.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Returns the default release type for the given kind.","","","","","","","","","A major version number (e.g. 2021.1)","A version number","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The major version (e.g. 2021.1)","Returns whether the version matches another version.","The minor version (if any)","","","","","","","","","","","","","","","","","","","","","Download and extract a tarball from a URL.","Show a desktop notification.","Strip the content of a folder, moving all files and …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,1,2,0,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,46,46,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,25,25,25,0,0,25,25,26,25,26,25,25,25,25,25,25,25,26,25,26,26,25,26,26,26,26,25,25,26,25,26,25,26,25,26,0,0,0,0,0,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,0,0,0,38,38,39,39,39,40,38,38,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,32,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,34,43,34,43,34,43,34,43,34,43,34,43,34,34,43,34,34,34,43,43,43,34,34,43,43,34,43,34,43,34,43,34,43,34,34,34,43,34,43,34,43,34,43,34,43,34,43,34,43,34,43,34,43,34,43,43,0,0,0],"f":"````````````````````````````{ce{}{}}000``{bb}{dd}{{ce}f{}{}}0{c{{h{b}}}j}{c{{h{d}}}j}{b{{l{d}}}}`{{bn}A`}{{dn}A`}{cc{}}099```99{c{{h{e}}}{}{}}000{cAb{}}0`;;`;;{AdAd}9`{{Adn}A`}4={Af{{l{Ad}}}}>`443>````````>>{AhAh}<{Ahc{{Al{Aj}}AnB`}}{AhBb}{{Ahn}A`}92{AhBd}3{{Ahc}c{{Al{Aj}}AnB`}}{ce{}{}}{{Ahc}f{{Bf{Aj}}}}01<<;1````{{BhBj}f}22{{}Bh}{Bh{{Bl{Bj}}}}{{BhBh}f}{Bh{{Bn{Bj}}}}{{Bhn}A`}{BjBh}{cc{}}9{BhBd}{BhC`}8{{}c{}}{cAj{}}{c{{h{e}}}{}{}}0{cAb{}}?``````????{CbCb}{{ce}f{}{}}{{CbCb}Bd}{{ce}Bd{}{}}00{{Cbn}A`}{{Cdn}A`}<<{{}{{Ch{CfCd}}}}{ce{}{}}0{{CdCbcBd}fCj}``1::::9911``````{AfAj}{AfCl}00133``{AfAf}:{{AfAf}Cn}{{ce}Cn{}{}}{{AfAf}Bd};;;{Af{{l{Af}}}}{{Afn}A`}0{cc{}}{D`Af}{Bb{{h{Afc}}}{}}{{Afc}fDb}={AfBd}0``{Af{{l{f}}}}{{}{{l{{Bl{Af}}}}}}{D`{{l{{Bl{Af}}}}}}{Af{{l{{Bl{Af}}}}}};{{D`{Bn{Dd}}{Bn{Df}}{Bn{Dh}}}Af}{{AfAf}{{Bn{Cn}}}}``{{Afc}hDj}{Af{{l{d}}}}{ce{}{}}{cAj{}}{c{{h{e}}}{}{}}0{cAb{}};;``3```{DlBd}{Dl{{l{f}}}}<;{Dn{{l{{Bl{Af}}}}}}{E`{{l{d}}}}22`77{DfDf}{{ce}f{}{}}{{DfDf}Cn}{{ce}Cn{}{}}{c{{h{Df}}}j}{{DfDf}Bd}{{ce}Bd{}{}}00{{Dfn}A`}0{cc{}}{Bb{{h{Dfc}}}{}}{{Dfc}fDb}{ce{}{}}`6`{{EbEb{Bn{Eb}}}Df}{{DfDf}{{Bn{Cn}}}}`{{Dfc}hDj}3{cAj{}}{c{{h{e}}}{}{}}0{cAb{}}6``````````````````````{D`Aj}0{D`Bb}088{D`D`}{{ce}f{}{}}{{D`D`}Cn}3{{ce}Cn{}{}}4{{D`D`}Bd}{{ce}Bd{}{}}00{{D`n}A`}0{cc{}}{Bb{{h{D`c}}}{}}{{D`c}fDb}{ce{}{}}{D`{{l{{Bn{Af}}}}}}0{{}{{Ed{D`}}}}{{D`D`}{{Bn{Cn}}}}{{D`c}hDj}4{cAj{}}{c{{h{e}}}{}{}}0{cAb{}}7````{DhBb}88{DhDh}{{ce}f{}{}}{{DhDh}Cn}{{ce}Cn{}{}}{c{{h{Dh}}}j}{{DhDh}Bd}{{ce}Bd{}{}}00{{Dhn}A`}0{cc{}}{Bb{{h{Dhc}}}{}}{{Dhc}fDb}{ce{}{}}{D`Dh}{{DhDh}{{Bn{Cn}}}}{{Dhc}hDj}3{cAj{}}{c{{h{e}}}{}{}}0{cAb{}}6``6666{DdDd}{EfEf}{{ce}f{}{}}0{{DdDd}Cn}{{EfEf}Cn}{{ce}Cn{}{}}0{c{{h{Dd}}}j}{{DdDd}Bd}{{EfEf}Bd}{{ce}Bd{}{}}00000{{Ddn}A`}0{{Efn}A`}0{cc{}}0{Bb{{h{Ddc}}}{}}{Bb{{h{Efc}}}{}}{{Ddc}fDb}{{Efc}fDb}{ce{}{}}0`:``{{Ef{Bn{Eh}}}Dd}{{EbEh}Ef}{{DdDd}{{Bn{Cn}}}}{{EfEf}{{Bn{Cn}}}}{{Ddc}hDj}{{Efc}hDj}66{cAj{}}0{c{{h{e}}}{}{}}000{cAb{}}099`{{BbCl{Bn{Bb}}{Bn{Ej}}}{{l{f}}}}{{BbBb}{{l{f}}}}{Cl{{l{f}}}}","c":[],"p":[[5,"Release",26],[5,"Download",26],[1,"unit"],[6,"Result",410],[10,"Deserializer",411],[8,"Result",412],[5,"Formatter",413],[8,"Result",413],[5,"TypeId",414],[5,"Fetch",62],[5,"Tool",165],[6,"Variable",78],[5,"String",415],[10,"From",416],[10,"Send",417],[10,"Sync",417],[1,"str"],[1,"bool"],[10,"Into",416],[5,"Batch",106],[5,"Error",412],[5,"Vec",418],[6,"Option",419],[1,"usize"],[6,"Level",130],[5,"Logger",130],[5,"ThreadId",420],[5,"RefMut",421],[10,"Display",413],[5,"PathBuf",422],[6,"Ordering",423],[6,"Kind",263],[10,"Hasher",424],[5,"Version",349],[5,"Build",232],[6,"Type",318],[10,"Serializer",425],[10,"Link",221],[10,"List",221],[10,"Probe",221],[1,"u16"],[1,"slice"],[5,"Major",349],[1,"u8"],[5,"ProgressBar",426],[8,"Result",106]],"b":[[189,"impl-Debug-for-Tool"],[190,"impl-Display-for-Tool"],[244,"impl-Display-for-Build"],[245,"impl-Debug-for-Build"],[301,"impl-Debug-for-Kind"],[302,"impl-Display-for-Kind"],[334,"impl-Display-for-Type"],[335,"impl-Debug-for-Type"],[372,"impl-Debug-for-Version"],[373,"impl-Display-for-Version"],[374,"impl-Display-for-Major"],[375,"impl-Debug-for-Major"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
