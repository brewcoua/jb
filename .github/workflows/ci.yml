name: CI

on: [push, pull_request]

env:
  BINARY_NAME: jb

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      RUSTFLAGS: -Dwarnings
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2.7.3
        with:
          save-if: ${{ github.ref == 'refs/heads/master' }}
      - name: Test
        run: cargo test --workspace
      - name: Check
        run: cargo check --locked --workspace

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      RUSTFLAGS: -Dwarnings
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2.7.3
        with:
          save-if: ${{ github.ref == 'refs/heads/master' }}

      - name: Build
        run: cargo build --release --locked

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}
          path: target/release/${{ env.BINARY_NAME }}

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2.7.3
        with:
          save-if: ${{ github.ref == 'refs/heads/master' }}
      - name: Clippy
        run: cargo clippy --workspace --tests -- -Dwarnings -Dclippy::all -Dclippy::pedantic

  outdated:
    name: Outdated
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/install@cargo-outdated
      - run: cargo outdated --workspace --exit-code 1

  check_release:
    name: Check Release
    needs: [test, build, clippy, outdated]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    timeout-minutes: 45
    outputs:
      needed: ${{ steps.check_release.outputs.needed }}
      latest_tag: ${{ steps.check_release.outputs.latest_tag }}
      bumped_version: ${{ steps.check_release.outputs.bumped_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Git Cliff
        env:
          VERSION: 1.4.0
        run: |
          export directory=$(mktemp -d)
          cd "$directory"
          
          wget "https://github.com/orhun/git-cliff/releases/download/v${{ env.VERSION }}/git-cliff-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz"
          tar -xvf "git-cliff-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz" --strip-components 1
          sudo mv git-cliff /usr/local/bin/
          
          cd -
          rm -rf "$directory"

      - name: Check if a release is needed
        id: check_release
        run: |
          export BUMPED_VERSION=$(git cliff --unreleased --bump --context --config .github/cliff.toml | jq -r ".[0].version")
          if [ "$BUMPED_VERSION" = "null" ]; then
            echo "needed=false" >> "$GITHUB_OUTPUT"
          else
            echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"
            echo "bumped_version=$BUMPED_VERSION" >> "$GITHUB_OUTPUT"
            echo "needed=true" >> "$GITHUB_OUTPUT"
          fi

  release:
    name: Release
    needs: check_release
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && needs.check_release.outputs.needed == 'true'
    permissions:
      contents: write
    uses: ./.github/workflows/release.yml
    with:
      bumped_version: ${{ needs.check_release.outputs.bumped_version }}
      latest_tag: ${{ needs.check_release.outputs.latest_tag }}